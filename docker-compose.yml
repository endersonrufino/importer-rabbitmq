version: '3.8'

services:
  api-upload:
    build:
      context: .
      dockerfile: api-upload/Dockerfile
    ports:
      - "5000:80"
    environment:
      - DOTNET_RUNNING_IN_CONTAINER=true
      - ASPNETCORE_ENVIRONMENT=Production
      - RABBITMQ_HOST=rabbitmq
      - UploadSettings__BasePath=/app/shared/uploads
      - ConnectionStrings__DefaultConnection=Host=postgre-db;Port=5432;Database=importer_db;Username=postgres;Password=postgres
    depends_on:
      - postgre-db
      - rabbitmq
    volumes:
      - uploadshared:/app/shared/uploads
    networks:
      - app_network
    restart: always

  console-consumer:
    build:
      context: .
      dockerfile: console-consumer/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
      - RABBITMQ_HOST=rabbitmq
      - UploadSettings__BasePath=/app/shared/uploads
      - ConnectionStrings__DefaultConnection=Host=postgre-db;Port=5432;Database=importer_db;Username=postgres;Password=postgres
    depends_on:
      - postgre-db
      - rabbitmq
    volumes:
      - uploadshared:/app/shared/uploads
    networks:
      - app_network
    restart: always

  postgre-db:
    image: postgres:15-alpine  # ou continue com bitnami/postgresql se preferir
    ports:
    - "5432:5432"
    environment:
      - POSTGRES_DB=importer_db
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    volumes:
      - dbdata:/var/lib/postgresql/data
    networks:
      - app_network
    restart: always

  rabbitmq:
    image: rabbitmq:3-management
    hostname: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      - RABBITMQ_DEFAULT_USER=guest
      - RABBITMQ_DEFAULT_PASS=guest
    networks:
      - app_network
    restart: always
    healthcheck:
      test: ["CMD", "rabbitmqctl", "status"]
      interval: 10s
      timeout: 10s
      retries: 5

volumes:
  dbdata: {}
  uploadshared: {}

networks:
  app_network:
    driver: bridge
